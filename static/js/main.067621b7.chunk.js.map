{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Functional/Functional.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","frameSize","itemWidth","animationDuration","translate","imageStyle","width","concat","height","containterStyle","listStyle","transform","length","transition","_jsx","className","children","style","map","image","index","src","alt","String","Functional","_useState","useState","_useState2","_slicedToArray","setTranslate","_useState3","_useState4","setItemWidth","_useState5","_useState6","setFrameSize","_useState7","_useState8","step","setStep","_useState9","_useState10","setAnimationDuration","_useState11","_useState12","infinityMode","setInfinityMode","maxStep","currentStep","isFirstImage","isLastImage","_jsxs","_Fragment","type","onClick","prevTranslate","disabled","htmlFor","id","value","onChange","event","Number","target","min","max","checked","state","App","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","_createClass","key","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.067621b7.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[],\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  translate: number,\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  translate,\n}) => {\n  const imageStyle = {\n    width: `${itemWidth}px`,\n    height: `${itemWidth}px`,\n  };\n\n  const containterStyle = {\n    width: `${frameSize * itemWidth}px`,\n  };\n\n  const listStyle = {\n    transform: `translateX(-${translate}%)`,\n    width: `${itemWidth * frameSize * (images.length / frameSize)}px`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={containterStyle}>\n        <ul className=\"Carousel__list\" style={listStyle}>\n          {images.map((image, index) => (\n            <li key={image}>\n              <img src={image} alt={String(index + 1)} style={imageStyle} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport Carousel from '../Carousel/Carousel';\n\ninterface Props {\n  images: string[];\n}\n\nexport const Functional: React.FC<Props> = ({ images }) => {\n  const [translate, setTranslate] = useState(0);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinityMode, setInfinityMode] = useState(false);\n\n  const maxStep = 100 - ((100 / images.length) * frameSize);\n  const currentStep = (100 / images.length) * step;\n\n  const isFirstImage = translate <= 0;\n  const isLastImage = translate >= maxStep;\n\n  function nextClick() {\n    setTranslate(prevTranslate => {\n      if (prevTranslate === maxStep) {\n        return 0;\n      }\n\n      return prevTranslate + currentStep > maxStep\n        ? maxStep\n        : prevTranslate + currentStep;\n    });\n  }\n\n  function prevClick() {\n    setTranslate(prevTranslate => {\n      if (prevTranslate === 0) {\n        return maxStep;\n      }\n\n      return prevTranslate - currentStep < 0\n        ? 0\n        : prevTranslate - currentStep;\n    });\n  }\n\n  function isChecked() {\n    setInfinityMode(state => {\n      return state === false;\n    });\n  }\n\n  return (\n    <>\n      <Carousel\n        images={images}\n        // step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        // infinite={infinityMode}\n        translate={translate}\n      />\n\n      <div>\n        <button\n          type=\"button\"\n          onClick={prevClick}\n          disabled={\n            (isFirstImage && !infinityMode) || (isFirstImage && isLastImage)\n          }\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={nextClick}\n          disabled={\n            (isLastImage && !infinityMode) || (isLastImage && isFirstImage)\n          }\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n\n        <div className=\"Carousel__params\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"Carousel__params--label\"\n          >\n            Width of image in px:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            onChange={event => setItemWidth(Number(event.target.value))}\n          />\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"Carousel__params--label\"\n          >\n            Size of frame:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            onChange={event => setFrameSize(Number(event.target.value))}\n          />\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"Carousel__params--label\"\n          >\n            Step of scroll:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            onChange={event => setStep(Number(event.target.value))}\n          />\n\n          <label\n            htmlFor=\"durationAnimationId\"\n            className=\"Carousel__params--label\"\n          >\n            Duration of animation in ms:\n          </label>\n\n          <input\n            type=\"number\"\n            id=\"durationAnimationId\"\n            value={animationDuration}\n            min={0}\n            onChange={event => setAnimationDuration(Number(event.target.value))}\n          />\n\n          <div className=\"Carousel__params--infinity\">\n            <label\n              htmlFor=\"infinityId\"\n              className=\"Carousel__params--label\"\n            >\n              Infinity mode:\n            </label>\n\n            <input\n              type=\"checkbox\"\n              id=\"infinityId\"\n              checked={infinityMode}\n              onClick={isChecked}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n// import Carousel from './components/Carousel';\nimport { Functional } from './components/Functional/Functional';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Functional images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}